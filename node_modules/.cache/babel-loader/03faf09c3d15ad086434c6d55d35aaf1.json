{"ast":null,"code":"var _jsxFileName = \"/Users/rmunoz/Development/developer_test_client-main/src/components/People/People.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { fetchJson } from '../../api';\nimport Person from '../Person';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction People() {\n  _s();\n\n  const [people, setPeople] = React.useState([]);\n  React.useEffect(() => {\n    fetchJson('people').then(peopleResponse => setPeople(peopleResponse.results));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: people.map(person => /*#__PURE__*/_jsxDEV(Person, {\n      person: person\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(People, \"iLHt2u73MC8pQH7JexuLSo07ahk=\");\n\n_c = People;\nexport default People;\n\nvar _c;\n\n$RefreshReg$(_c, \"People\");","map":{"version":3,"sources":["/Users/rmunoz/Development/developer_test_client-main/src/components/People/People.tsx"],"names":["React","fetchJson","Person","People","people","setPeople","useState","useEffect","then","peopleResponse","results","map","person"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,WAA1B;AAEA,OAAOC,MAAP,MAAmB,WAAnB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,KAAK,CAACM,QAAN,CAA6B,EAA7B,CAA5B;AAEAN,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AACpBN,IAAAA,SAAS,CAA4B,QAA5B,CAAT,CACGO,IADH,CACQC,cAAc,IAAIJ,SAAS,CAACI,cAAc,CAACC,OAAhB,CADnC;AAED,GAHD,EAGG,EAHH;AAKA,sBACE;AAAA,cACGN,MAAM,CAACO,GAAP,CAAWC,MAAM,iBAAI,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,YAArB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAbQT,M;;KAAAA,M;AAeT,eAAeA,MAAf","sourcesContent":["import React from 'react'\n\nimport { fetchJson } from '../../api'\nimport { PersonType } from '../../types'\nimport Person from '../Person'\n\nfunction People() {\n  const [people, setPeople] = React.useState<PersonType[]>([])\n\n  React.useEffect(() => {\n    fetchJson<{ results: PersonType[] }>('people')\n      .then(peopleResponse => setPeople(peopleResponse.results))\n  }, [])\n\n  return (\n    <div>\n      {people.map(person => <Person person={person} />)}\n    </div>\n  )\n}\n\nexport default People\n"]},"metadata":{},"sourceType":"module"}